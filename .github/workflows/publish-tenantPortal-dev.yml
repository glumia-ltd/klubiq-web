name: Deploy Tenant Portal
on:
  push:
    branches: [dev, staging]
    paths:
      - "apps/tenant-portal/**"
      - "packages/**"
permissions:
  contents: read
  packages: write
env:
  VITE_FIREBASE_APIKEY: ${{ secrets.FIREBASE_API_KEY }}
  VITE_AUTHDOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
  VITE_PROJECTID: ${{ secrets.FIREBASE_PROJECT_ID }}
  VITE_STORAGEBUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
  VITE_MESSAGINGSENDERID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
  VITE_APPID: ${{ secrets.FIREBASE_APP_ID }}
  VITE_MEASUREMENTID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
  VITE_BASE_URL_DEV: ${{ vars.VITE_BASE_URL_DEV }}
  VITE_BASE_URL_STAGING: ${{ vars.VITE_BASE_URL_STAGING }}
  VITE_BASE_URL_PROD: ${{ vars.VITE_BASE_URL_PROD }}
  VITE_APPLICATION_NAME: tenantportal
  NODE_ENV: ${{ github.ref == 'refs/heads/dev' && 'development' || github.ref == 'refs/heads/prod' && 'production' || github.ref == 'refs/heads/qa' && 'staging' ||'development'}}
  VITE_NODE_ENV: ${{ github.ref == 'refs/heads/dev' && 'development' || github.ref == 'refs/heads/prod' && 'production' || github.ref == 'refs/heads/qa' && 'staging' ||'development'}}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Project
        run: |
          npm install --include=optional
          npm run buildUIC || exit 1
          npm run buildTP || exit 1
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: ${{ github.ref == 'refs/heads/dev' && 'development' || github.ref == 'refs/heads/main' && 'production' || github.ref == 'refs/heads/qa' && 'staging' || 'development'}}
    steps:
      - uses: actions/checkout@v4
      - name: Sync repo to server
        uses: easingthemes/ssh-deploy@main
        with:
          REMOTE_HOST: ${{ secrets.SSH_HOST }}
          REMOTE_USER: ${{ secrets.SSH_USERNAME }}
          SSH_PRIVATE_KEY: ${{ secrets.LIGHTSAIL_SSH_CERT }}
          SOURCE: '.'
          EXCLUDE: '/node_modules/, node_modules, /.git/, /.turbo/, /dist/'
          TARGET: ${{ secrets.TARGET_DIR }}
      - name: Remote compose build/up
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.LIGHTSAIL_SSH_CERT }}
          script: |
            set -e
            cd ${{ secrets.TARGET_DIR }}
            docker compose -f docker-compose.staging.yml build --no-cache tenant-web
            docker compose -f docker-compose.staging.yml up -d tenant-web
            docker image prune -f

