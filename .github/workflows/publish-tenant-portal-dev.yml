name: Deploy Tenant Portal
on:
  push:
    branches:
      - dev
    paths:
      - "apps/tenant-portal/**"
      - "packages/**"
env:
  NODE_ENV: ${{ github.ref == 'refs/heads/dev' && 'development' || github.ref == 'refs/heads/prod' && 'production' || github.ref == 'refs/heads/qa' && 'staging' ||'development'}}
  VITE_BASE_URL_DEV: ${{ vars.VITE_BASE_URL_DEV }}
  VITE_BASE_URL_STAGING: ${{ vars.VITE_BASE_URL_STAGING }}
  VITE_BASE_URL_PROD: ${{ vars.VITE_BASE_URL_PROD }}
  VITE_APPLICATION_NAME: klubiq-tenant-portal
  VITE_NODE_ENV: ${{ github.ref == 'refs/heads/dev' && 'development' || github.ref == 'refs/heads/prod' && 'production' || github.ref == 'refs/heads/qa' && 'staging' ||'development'}}
  VITE_IDB_VERSION: ${{ vars.VITE_IDB_VERSION }}
  VITE_THEME_SWITCH_ENABLED: ${{ vars.VITE_THEME_SWITCH_ENABLED }}
  REACT_TP_APP_VERSION: ${{ vars.REACT_TP_APP_VERSION }}
  BUILD_NUMBER: ${{ github.run_number }}
  VITE_TURNSTILE_SITEKEY: ${{ secrets.VITE_TURNSTILE_SITEKEY }}
  VITE_HMAC_SECRET: ${{ secrets.VITE_HMAC_SECRET }}

  APP: klubiq-tenat-portal
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Project
        run: |
          npm install --include=optional
          npm run buildUIC || exit 1
          npm run buildTP || exit 1
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: |
            apps/tenant-portal/dist/
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: ${{ github.ref == 'refs/heads/dev' && 'development' || github.ref == 'refs/heads/main' && 'production' || github.ref == 'refs/heads/qa' && 'staging' || 'development'}}
    steps:
      - name: Download dev artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: artifacts/dist
      - name: Deploy to Lightsail
        uses: easingthemes/ssh-deploy@main
        with:
          REMOTE_HOST: ${{ secrets.SSH_HOST }}
          REMOTE_USER: ${{ secrets.SSH_USERNAME }}
          SSH_PRIVATE_KEY: ${{ secrets.LIGHTSAIL_SSH_CERT }}
          SOURCE: 'artifacts/'
          EXCLUDE: '/node_modules/, node_modules, /node_modules'
          TARGET: ${{ secrets.TENANT_TARGET_DIR }}
          SCRIPT_BEFORE: |
            sudo chown $USER ${{ secrets.TENANT_TARGET_DIR }}
            cd ${{ secrets.TENANT_TARGET_DIR }}


# #npm ci --omit=dev && npm cache clean --force
