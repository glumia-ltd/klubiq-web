name: Deploy Landlord Portal
on:
  push:
    branches:
      - main
    # paths:
    #   - "apps/landlord-portal/**"
    #   - "packages/**"
env:
  VITE_APIKEY: ${{ secrets.FIREBASE_API_KEY }}
  VITE_AUTHDOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
  VITE_PROJECTID: ${{ secrets.FIREBASE_PROJECT_ID }}
  VITE_STORAGEBUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
  VITE_MESSAGINGSENDERID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
  VITE_APPID: ${{ secrets.FIREBASE_APP_ID }}
  VITE_MEASUREMENTID: ${{ secrets.FIREBASE_MEASUREMENT_ID }}
  VITE_BASE_URL_DEV: ${{ vars.VITE_BASE_URL_DEV }}
  VITE_APPLICATION_NAME: landlordportal
  VITE_RECAPTCHA_SITE_KEY: ${{ secrets.VITE_RECAPTCHA_SITE_KEY }}
  VITE_RECAPTCHA_VALIDATION_URL: ${{ secrets.VITE_RECAPTCHA_VALIDATION_URL }}
  VITE_RECAPTCHA_DEBUG_TOKEN: ${{ secrets.VITE_RECAPTCHA_DEBUG_TOKEN }}
  NODE_ENV: ${{ github.env }}
  VITE_NODE_ENV: ${{ github.env }}
  VITE_WEB_PUSH_NOTIFICATION_PUBLIC_KEY: ${{ secrets.WEB_PUSH_NOTIFICATION_PUBLIC_KEY }}
  VITE_CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
  VITE_CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
  VITE_GOOGLE_PLACES_API_KEY: ${{ secrets.VITE_GOOGLE_PLACES_API_KEY }}
  VITE_IDB_VERSION: ${{ vars.VITE_IDB_VERSION }}

  APP: klubiq-landlord-portal
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Project
        run: |
          npm install --include=optional
          npm run buildLP
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: |
            apps/landlord-portal/dist/
  # apps/landlord-portal/public
  # apps/landlord-portal/src
  # apps/landlord-portal/package.json
  # apps/landlord-portal/vite.config.js
  # package-lock.json
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download prod artifacts
        uses: actions/download-artifact@v4
        with:
          name: artifacts
          path: artifacts/dist
      - name: Deploy to Lightsail
        uses: easingthemes/ssh-deploy@main
        with:
          REMOTE_HOST: ${{ secrets.SSH_HOST }}
          REMOTE_USER: ${{ secrets.SSH_USERNAME }}
          SSH_PRIVATE_KEY: ${{ secrets.LIGHTSAIL_SSH_CERT }}
          SOURCE: 'artifacts/'
          EXCLUDE: '/node_modules/, node_modules, /node_modules'
          TARGET: ${{ secrets.TARGET_DIR }}
          SCRIPT_BEFORE: |
            sudo chown $USER ${{ secrets.TARGET_DIR }}
            cd ${{ secrets.TARGET_DIR }}
          # SCRIPT_AFTER: |
          #   cd ${{ secrets.TARGET_DIR }}
          #   export VITE_APIKEY=${{ secrets.FIREBASE_API_KEY }}
          #   export VITE_PROJECTID=${{ secrets.FIREBASE_PROJECT_ID }}
          #   export VITE_AUTHDOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }}
          #   export VITE_STORAGEBUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }}
          #   export VITE_MESSAGINGSENDERID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
          #   export VITE_APPID=${{ secrets.FIREBASE_APP_ID }}
          #   export VITE_MEASUREMENTID=${{ secrets.FIREBASE_MEASUREMENT_ID }}
          #   export VITE_BASE_URL_DEV=${{ vars.VITE_BASE_URL_DEV }}
          #   export NODE_ENV=${{ vars.NODE_ENV }}
          #   npm ci
          #   npm run build:prod

#npm ci --omit=dev && npm cache clean --force
