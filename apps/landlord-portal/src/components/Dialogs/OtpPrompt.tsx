import { Box, Stack, Typography } from '@mui/material';
import Button from '@mui/material/Button';
import Dialog from '@mui/material/Dialog';
import IconButton from '@mui/material/IconButton';
import CloseIcon from '@mui/icons-material/Close';
import OTPInput from '../ControlledComponents/OTPInputField';
import LoadingButton from '@mui/lab/LoadingButton';
import LockClockTwoToneIcon from '@mui/icons-material/LockClockTwoTone';

interface OtpPrompt {
	open: boolean;
	onCancel: React.MouseEventHandler<HTMLButtonElement> | (() => void);
	onVerifyOtpClick: React.MouseEventHandler<HTMLButtonElement> | undefined;
	verifyOtp: () => void;
	setOtp: React.Dispatch<React.SetStateAction<string>>;
	otp: string;
	otpError: string;
	verifying: boolean;
}
const OTPPrompt = ({
	open,
	onCancel,
	onVerifyOtpClick,
	verifyOtp,
	setOtp,
	otp,
	otpError,
	verifying,
}: OtpPrompt) => {
	return (
		<Dialog fullWidth={true} maxWidth={'xs'} open={open}>
			<IconButton
				sx={{
					position: 'absolute',
					right: 8,
					top: 8,
				}}
				onClick={onCancel}
			>
				<CloseIcon />
			</IconButton>
			<Stack direction={'column'} spacing={3} sx={{ p: 4 }}>
				<Stack
					direction='column'
					gap={2}
					sx={{
						alignItems: 'center',
						justifyContent: 'center',
						textAlign: 'center',
					}}
				>
					<LockClockTwoToneIcon color='primary' sx={{ fontSize: 56 }} />
					<Typography variant='h4'>Authenticate Your Account</Typography>
					<Typography variant='body1'>
						Protecting your account is our top priority.Please confirm your
						account by entering the 6-digit code generated by your
						authentication app.
					</Typography>

					<Box sx={{ mt: 1}}>
						<OTPInput
							value={otp}
							separator={<span></span>}
							onChange={setOtp}
							length={6}
							onEnterKeyPress={verifyOtp}
						/>
						{otpError && <Typography color='error'>{otpError}</Typography>}
					</Box>
				</Stack>
				<Stack
					direction={'row'}
					spacing={1}
					sx={{
						justifyContent: 'flex-end',
					}}
				>
					<Button variant='outlined' onClick={onCancel}>
						Cancel
					</Button>
					<LoadingButton
						onClick={onVerifyOtpClick}
						loading={verifying}
						loadingIndicator='verifying...'
						variant='klubiqMainButton'
					>
						Verify
					</LoadingButton>
				</Stack>
			</Stack>
		</Dialog>
	);
};

export default OTPPrompt;
